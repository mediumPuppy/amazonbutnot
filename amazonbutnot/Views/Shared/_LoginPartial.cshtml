@using Microsoft.AspNetCore.Identity
@inject SignInManager<Customer> SignInManager
@inject UserManager<Customer> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        bool isAdmin = await UserManager.IsInRoleAsync(UserManager.GetUserAsync(User).Result, "admin");
        if (isAdmin)
        {
            //The next few links are going to be links to admin pages, we'll want to change this to only be accessible by admins
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Orders" asp-action="OrderReview">Review Orders</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Orders" asp-action="ProductReview">Review Products</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Admin" asp-action="UserManagement">Review Users</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Admin" asp-action="UserRoles">Roles</a>
            </li>
        }

        //All signed in users should see the next 2
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index">Account</a>
        </li>
        <vc:cart-summary/>

    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>